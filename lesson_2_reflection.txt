What happens when you initialize a repository? Why do you need to do it?

Git tracking begins. Initial commit is created. Needed to let git know
what files to track.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

It is a temporary area, unlike working directory and the repository.
It works as a buffer zone where you customize which files you want git to track.

How can you use the staging area to make sure you have one commit per logical
change?

It allows me to choose which files I need to update and compare it to my working
directory and the repository.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

They are useful for trying experimental code before adding new features to your
project.

How do the diagrams help you visualize the branch structure?

You can easily see the way commits are split into different branches.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

It creates a new commit containing all modifications on both branches, which
points to the branch we currently have checked out. It is graphicly represented 
in the diagram as the tips of both branches merging into one commit.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
